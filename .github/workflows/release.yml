name: Release Wikipedia MCP

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.5.3)'
        required: true
        default: '1.5.3'
      is_prerelease:
        description: 'Is this a pre-release?'
        type: boolean
        required: true
        default: false

permissions:
  contents: read

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/version = \"[0-9]*\\.[0-9]*\\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/g" pyproject.toml
          echo "Updated version to ${{ github.event.inputs.version }}"
          cat pyproject.toml | grep version

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/version = \"[0-9]*\\.[0-9]*\\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/g" pyproject.toml

      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "Bump version to ${{ github.event.inputs.version }}" || exit 0

      - name: Create and push tag
        run: |
          git tag v${{ github.event.inputs.version }}
          git push origin HEAD:main
          git push origin v${{ github.event.inputs.version }}

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Wikipedia MCP v${{ github.event.inputs.version }}
          body: |
            ## What's Changed
            
            Release v${{ github.event.inputs.version }} of Wikipedia MCP.
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
            
            ## Installation
            
            ```bash
            pip install wikipedia-mcp
            ```
            
            Or using uvx:
            ```bash
            uvx wikipedia-mcp
            ```
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-pypi:
    name: Publish to PyPI ðŸš€
    if: ${{ !github.event.inputs.is_prerelease }}
    needs: [build, create-release]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/wikipedia-mcp
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish to TestPyPI ðŸ§ª
    needs: [build, create-release]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/wikipedia-mcp
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/